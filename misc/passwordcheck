#!/usr/bin/python3
#-*- coding: utf-8 -*-

import time
import getpass
import os
import string
import itertools

allowed_characters = string.ascii_uppercase+string.ascii_lowercase+string.digits+string.punctuation
# TODO: fix this character
allowed_characters.replace("'", "")

# Assuming <hashing_algorithm>sum exists and is installed
hashing_algorithm = "sha256"
max_length = 20

# TODO: multiprocessing?
def force_password(hashed_pw):
    attempts = 0
    for password_length in range(1, max_length):
        for guess in itertools.product(allowed_characters, repeat=password_length):
            attempts += 1
            print(guess)
            guess = "".join(guess)
            hashed_guess = os.popen("echo -n \'"+guess+"\' | "+hashing_algorithm+"sum 2>/dev/null").read().split(" ")[0]
            if hashed_guess == hashed_pw:
                return guess, attempts

print("Max password lengh: {1}; supported characters are:\n'{0}'".format(allowed_characters, max_length))
password = getpass.getpass(prompt='Please enter a valid password: ', stream=None)
hashed_pw = os.popen("echo -n \'"+password+"\' | "+hashing_algorithm+"sum").read().split(" ")[0]

start_time = time.time()
guessed_password, attempts = force_password(hashed_pw)

time_took = (time.time()-start_time)

print("It took {0} seconds to figure out the given password.".format(time_took))

print_pw = input("Do you want to print the cleartext password? (y/N) ")
if print_pw == "y" or print_pw == "Y":
    print("Password was: \"{0}\"; took {1} attempts.".format(guessed_password, attempts))
